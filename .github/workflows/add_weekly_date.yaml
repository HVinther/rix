name: Trigger and Update Build

on:
  schedule:
    - cron: '0 23 * * 1'
  push:
    branches:
      - main

jobs:
  update-and-trigger:
    name: Update and Trigger Build
    runs-on: ubuntu-latest
    env:
     GH_TOKEN: ${{ github.token }}
     GITHUB_PAT: ${{ secrets.UPDATE_AVAILABLE_CSV }}
     branch_date: $(date '+%Y-%m-%d')

    steps:
      - name: Clone nixpkgs repository
        uses: actions/checkout@v4
        with:
          repository: rstats-on-nix/nixpkgs
          ref: env.branch_date
          token: env.GITHUB_PAT

      - name: Update trigger_build.yml
        run: |
          branch_date=$(date '+%Y-%m-%d')
          curl -O https://raw.githubusercontent.com/rstats-on-nix/nixpkgs/refs/heads/2025-01-14/.github/workflows/trigger_build.yml
          sed -i "s/2025-01-14/$branch_date/" trigger_build.yml
          mv trigger_build.yml nixpkgs/.github/workflows/trigger_build.yml

      - name: Commit and push changes
        run: |
          cd nixpkgs
          branch_date=$(date '+%Y-%m-%d')
          git config --global user.email "bruno@brodrigues.co"
          git config --global user.name "b-rodrigues"
          git add .
          git commit -m "Update trigger_build.yml for $branch_date"
          git push origin "$branch_date"

      - name: Wait for build_tree action
        id: wait_build
        uses: actions/github-script@v6
        with:
          script: |
            const owner = 'rstats-on-nix';
            const repo = 'build_tree';
            const workflow = 'build.yml';
            const { data: { workflow_runs } } = await github.rest.actions.listWorkflowRuns({
              owner,
              repo,
              workflow_id: workflow,
              per_page: 1
            });
            if (workflow_runs.length === 0 || workflow_runs[0].status !== 'completed') {
              core.setFailed('build_tree action did not complete successfully.');
            } else if (workflow_runs[0].conclusion !== 'success') {
              core.setFailed('build_tree action failed.');
            }
            return workflow_runs[0].conclusion === 'success';

      - name: Remove repo
        if: steps.wait_build.conclusion == 'success'
        run: rm -rf nixpkgs

      - name: Checkout current repository
        if: steps.wait_build.conclusion == 'success'
        uses: actions/checkout@v4

      - name: Update available_df.csv
        if: steps.wait_build.conclusion == 'success'
        run: |
          date_today=$(date '+%Y-%m-%d')
          echo "\"2024\",\"4.4.2\",\"3.20\",\"$date_today\",\"supported\",\"supported\",\"might work\"" >> inst/extdata/available_df.csv

      - name: Commit and create PR
        if: steps.wait_build.conclusion == 'success'
        run: |
          git config --global user.email "bruno@brodrigues.co"
          git config --global user.name "b-rodrigues"
          git checkout -b "update-available-$date_today"
          git add inst/extdata/available_df.csv
          git commit -m "Update available_df.csv for $date_today"
          git push origin "update-available-$date_today"
          gh pr create --title "Update available_df.csv for $date_today" --body "This PR adds the entry for $date_today."
